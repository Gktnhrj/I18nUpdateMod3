name: Common
on:
  workflow_call:
    inputs:
      type:
        required: true
        type: string
      is-snapshot:
        required: false
        type: boolean
        default: true
      change-log:
        required: false
        type: string
      tag:
        required: false
        type: string

jobs:
  build-common:
    name: Build Common
    runs-on: ubuntu-latest
    environment: Build
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'
          cache: 'gradle'
      -
        name: Extract version from tag
        if: ${{ inputs.tag }}
        run: |
          # 从tag中提取版本号（假设tag格式为v1.2.3）
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"
      -
        name: Build with version
        env:
          IS_SNAPSHOT: ${{ inputs.is-snapshot }}
        run: |
          # 如果有从tag提取的版本号，则使用它
          if [ -n "$VERSION" ]; then
            ./gradlew clean shadowJar -Pversion=$VERSION --info --stacktrace
          else
            ./gradlew clean shadowJar --info --stacktrace
          fi
      -
        name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            build/libs/*.jar
            !build/libs/*-sources.jar
            !build/libs/*-javadoc.jar
      -
        name: Publish Modrinth
        if: ${{ !inputs.is-snapshot && inputs.tag }}
        env:
          IS_SNAPSHOT: ${{ inputs.is-snapshot }}
          CHANGE_LOG: ${{ inputs.change-log }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
        run: |
          # 使用从tag提取的版本号发布到Modrinth
          ./gradlew modrinth modrinthSyncBody -Pversion=$VERSION --info --stacktrace
      -
        name: Prepare release assets
        if: ${{ !inputs.is-snapshot && inputs.tag }}
        run: |
          # 找到构建的JAR文件
          JAR_FILE=$(ls build/libs/I18nUpdateMod-*.jar)
          # 重命名文件
          NEW_NAME="I18nUpdateMod3-${{ inputs.tag }}.jar"
          cp "$JAR_FILE" "$NEW_NAME"
          echo "ASSET_PATH=$NEW_NAME" >> $GITHUB_ENV
      -
        name: Create Release
        if: ${{ !inputs.is-snapshot && inputs.tag }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.tag }}
          release_name: Release ${{ inputs.tag }}
          body: ${{ inputs.change-log }}
          draft: false
          prerelease: false
      -
        name: Upload Release Asset
        if: ${{ !inputs.is-snapshot && inputs.tag }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: ${{ env.ASSET_PATH }}
          asset_content_type: application/java-archive
